%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/mynteye/imu/data_raw"
image0_topic: "/mynteye/left/image_raw"
output_path: "/home/tong/output/"

cam0_calib: "params_left_my.yaml"
image_width: 752
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# 这个是使用   T_ic:  (cam0 to imu0):  和   T_ic:  (cam1 to imu0):    
#test2
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -0.00102194, -0.99996762, -0.00798207,  0.00446187, 
            0.99993218, -0.00111445,  0.01159305, -0.04443589,
            -0.01160157, -0.00796969,  0.99990094,  0.02344622, 
            0., 0., 0., 1. ]

# #test1
# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -0.00050802, -0.99997339, -0.00727743,  0.00427721, 
#             0.99993149, -0.00059308,  0.01169021, -0.0444362,
#             -0.01169421, -0.007271,    0.99990518,  0.02231167, 
#             0., 0., 0., 1. ]



#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.001        # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.8         # gravity magnitude
acc_n: 1.1110843076171795e-02        # accelerometer measurement noise standard deviation. #0.599298904976
gyr_n: 8.3181712928626962e-04        # gyroscope measurement noise standard deviation.     #0.198614898699
acc_w: 2.0840812226480051e-04        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0598476212707351e-05        # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
